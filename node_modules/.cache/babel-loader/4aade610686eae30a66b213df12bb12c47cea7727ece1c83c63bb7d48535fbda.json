{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zoxju\\\\frontend\\\\src\\\\components\\\\JobForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateJobId() {\n  return 'j_' + Date.now() + '_' + Math.floor(Math.random() * 10000);\n}\nexport default function JobForm() {\n  _s();\n  const [job, setJob] = useState({\n    title: '',\n    description: '',\n    budget: '',\n    deadline: ''\n  });\n  const handleChange = e => {\n    setJob({\n      ...job,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const jobs = JSON.parse(localStorage.getItem('jobs') || '[]');\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    const jobId = generateJobId();\n    const createdAt = new Date().toISOString();\n    const newJob = {\n      jobId,\n      clientId: user.userId,\n      title: job.title,\n      description: job.description,\n      budget: job.budget,\n      deadline: job.deadline,\n      status: 'open',\n      createdAt,\n      offers: [],\n      postedBy: user.fullName\n    };\n    localStorage.setItem('jobs', JSON.stringify([...jobs, newJob]));\n    setJob({\n      title: '',\n      description: '',\n      budget: '',\n      deadline: ''\n    });\n    alert('Job posted!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        value: job.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: job.description,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Budget\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"budget\",\n        type: \"number\",\n        value: job.budget,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Deadline\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"deadline\",\n        type: \"date\",\n        value: job.deadline,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Post Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(JobForm, \"99CVtKbQ+SlgQl8D0mJrwEaEzX4=\");\n_c = JobForm;\nvar _c;\n$RefreshReg$(_c, \"JobForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","generateJobId","Date","now","Math","floor","random","JobForm","_s","job","setJob","title","description","budget","deadline","handleChange","e","target","name","value","handleSubmit","preventDefault","jobs","JSON","parse","localStorage","getItem","user","jobId","createdAt","toISOString","newJob","clientId","userId","status","offers","postedBy","fullName","setItem","stringify","alert","onSubmit","children","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/zoxju/frontend/src/components/JobForm.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction generateJobId() {\r\n  return 'j_' + Date.now() + '_' + Math.floor(Math.random() * 10000);\r\n}\r\n\r\nexport default function JobForm() {\r\n  const [job, setJob] = useState({ title: '', description: '', budget: '', deadline: '' });\r\n\r\n  const handleChange = (e) => {\r\n    setJob({ ...job, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const jobs = JSON.parse(localStorage.getItem('jobs') || '[]');\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    const jobId = generateJobId();\r\n    const createdAt = new Date().toISOString();\r\n    const newJob = {\r\n      jobId,\r\n      clientId: user.userId,\r\n      title: job.title,\r\n      description: job.description,\r\n      budget: job.budget,\r\n      deadline: job.deadline,\r\n      status: 'open',\r\n      createdAt,\r\n      offers: [],\r\n      postedBy: user.fullName,\r\n    };\r\n    localStorage.setItem('jobs', JSON.stringify([...jobs, newJob]));\r\n    setJob({ title: '', description: '', budget: '', deadline: '' });\r\n    alert('Job posted!');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>Title\r\n        <input name=\"title\" value={job.title} onChange={handleChange} required />\r\n      </label>\r\n      <label>Description\r\n        <textarea name=\"description\" value={job.description} onChange={handleChange} required />\r\n      </label>\r\n      <label>Budget\r\n        <input name=\"budget\" type=\"number\" value={job.budget} onChange={handleChange} required />\r\n      </label>\r\n      <label>Deadline\r\n        <input name=\"deadline\" type=\"date\" value={job.deadline} onChange={handleChange} required />\r\n      </label>\r\n      <button type=\"submit\">Post Job</button>\r\n    </form>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}